trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: BuildAndPublishMain
  displayName: 'Build and Publish Main Package'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      version: 9.x
      performMultiLevelLookup: true
      includePreviewVersions: true # Required for preview versions

  - script: dotnet --version
    displayName: 'Check .NET version'

  - script: dotnet restore ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj
    displayName: 'Restore Main'
  - script: dotnet build -c $(buildConfiguration) ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj
    displayName: 'Build Main $(buildConfiguration)'
  - script: dotnet pack -c Release ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj --no-build
    displayName: 'Pack Main'
  - task: NuGetCommand@2
    displayName: 'Push Main Package to Feed'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/Mscc.GenerativeAI.*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(publishVstsFeed)'
      allowPackageConflicts: true

- job: BuildAndPublishDependents
  displayName: 'Build and Publish Dependent Packages'
  dependsOn: BuildAndPublishMain
  condition: succeeded()
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      version: 9.x

#  - script: dotnet restore ./GenerativeAI.sln
#    displayName: 'Restore packages'
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
      projects: './GenerativeAI.sln'
      feedsToUse: 'select'
  - script: dotnet build -c $(buildConfiguration) ./GenerativeAI.sln
    displayName: 'Build Solution $(buildConfiguration)'
  - script: dotnet pack -c Release ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.Web.csproj --no-build
    displayName: 'Pack for ASP.NET Core'
  - script: dotnet pack -c Release ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.Google.csproj --no-build
    displayName: 'Pack for .NET using Google Cloud Client Library'
  - script: dotnet pack -c Release ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.Microsoft.csproj --no-build
    displayName: 'Pack for Microsoft.Extension.AI and Microsoft Semantic Kernel'
  - task: NuGetCommand@2
    displayName: 'Push Dependent Packages to Feed'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg;!$(Build.ArtifactStagingDirectory)/Mscc.GenerativeAI.*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(publishVstsFeed)'
      allowPackageConflicts: true