trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: BuildAndPublishMain
  displayName: 'Build and Publish Main Package'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      version: 9.x
      performMultiLevelLookup: true
      includePreviewVersions: true # Required for preview versions

  - script: dotnet --version
    displayName: 'Check .NET version'

  - script: dotnet restore ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj
    displayName: 'Restore Main'
  - script: dotnet build ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj -c $(buildConfiguration)
    displayName: 'Build Main $(buildConfiguration)'

  - script: dotnet pack ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj -c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)/
    displayName: 'Pack Main'

  - task: NuGetToolInstaller@1                            # Minimum required NuGet version: 4.8.0.5385+.
    displayName: 'NuGet Tool Installer'
    inputs:
      versionSpec: '*'
      checkLatest: true
  - task: NuGetAuthenticate@1
    displayName: 'NuGet Authenticate'
  - script: |
      dotnet nuget push --skip-duplicate --source "$(publishNugetFeed)" --api-key az $(Build.ArtifactStagingDirectory)/*.nupkg
    displayName: 'Push Main Package to Feed'

- job: BuildAndPublishDependents
  displayName: 'Build and Publish Dependent Packages'
  dependsOn: BuildAndPublishMain
  condition: succeeded()
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      version: 9.x
      performMultiLevelLookup: true
      includePreviewVersions: true # Required for preview versions

  - script: dotnet --version
    displayName: 'Check .NET version'

  - script: dotnet restore ./GenerativeAI.sln
    displayName: 'Restore packages'
  - script: dotnet build ./GenerativeAI.sln -c $(buildConfiguration)
    displayName: 'Build Solution $(buildConfiguration)'

  - script: dotnet pack ./src/Mscc.GenerativeAI.Web/Mscc.GenerativeAI.Web.csproj -c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)/
    displayName: 'Pack for ASP.NET Core'
  - script: dotnet pack ./src/Mscc.GenerativeAI.Google/Mscc.GenerativeAI.Google.csproj -c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)/
    displayName: 'Pack for .NET using Google Cloud Client Library'
  - script: dotnet pack ./src/Mscc.GenerativeAI.Microsoft/Mscc.GenerativeAI.Microsoft.csproj -c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)/
    displayName: 'Pack for Microsoft.Extension.AI and Microsoft Semantic Kernel'

  - task: NuGetAuthenticate@1
    displayName: 'NuGet Authenticate'
  - script: |
      dotnet nuget push --skip-duplicate --source "$(publishNugetFeed)" --api-key az $(Build.ArtifactStagingDirectory)/*.nupkg
    displayName: 'Push Dependent Packages to Feed'
#      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg;!$(Build.ArtifactStagingDirectory)/Mscc.GenerativeAI.*.nupkg'
