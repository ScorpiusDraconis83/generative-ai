trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: BuildAndPublishMain
  displayName: 'Build and Publish Main Package'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      version: 9.x
      performMultiLevelLookup: true
      includePreviewVersions: true # Required for preview versions

  - task: DotNetCoreCLI@2
    displayName: 'Restore, Build, and Pack Main'
    inputs:
      command: 'pack'
      packagesToPack: './src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj'
      configuration: '$(buildConfiguration)'
      versioningScheme: 'off'
  - task: NuGetCommand@2
    displayName: 'Push Main Package to Feed'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/Mscc.GenerativeAI.*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(publishVstsFeed)'
      allowPackageConflicts: true

- job: BuildAndPublishDependents
  displayName: 'Build and Publish Dependent Packages'
  dependsOn: BuildAndPublishMain
  condition: succeeded()
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      version: 9.x
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
      projects: './GenerativeAI.sln'
      feedsToUse: 'select'
  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: 'build'
      projects: './GenerativeAI.sln'
      arguments: '-c $(buildConfiguration)'
  - task: DotNetCoreCLI@2
    displayName: 'Pack Dependent Packages'
    inputs:
      command: 'pack'
      packagesToPack: |
        ./src/Mscc.GenerativeAI.Web/Mscc.GenerativeAI.Web.csproj
        ./src/Mscc.GenerativeAI.Google/Mscc.GenerativeAI.Google.csproj
        ./src/Mscc.GenerativeAI.Microsoft/Mscc.GenerativeAI.Microsoft.csproj
      nobuild: true
      versioningScheme: 'off'
  - task: NuGetCommand@2
    displayName: 'Push Dependent Packages to Feed'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg;!$(Build.ArtifactStagingDirectory)/Mscc.GenerativeAI.*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(publishVstsFeed)'
      allowPackageConflicts: true