name: MsccGenerativeAI

on:
  push:
    paths:
      - '**'
      - '!**.md'
      - '!docs/**'
      - '!samples/**'
      - '!tests/**'
      - '!LICENSE'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_push_main:
    name: Build and Push Main Package to GPR
    strategy:
      matrix:
        os: [ubuntu-latest]
        dotnet-version: ['9.x']
    runs-on: ${{ matrix.os }}

    steps:
    - name: enable windows longpaths
      run: |
        git config --global core.longpaths true

    - name: Check-out latest sources 
      uses: actions/checkout@v4

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.6.0
    - name: Check Cosign install!
      run: cosign version

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        source-url: https://nuget.pkg.github.com/mscraftsman/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Build for .NET
      run: dotnet build ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj -c Release

    - name: Pack for .NET
      run: dotnet pack -c Release ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj -o output/ --no-build

    - name: Setup access to GitHub Package Registry (GPR)
      run: dotnet nuget add source --username jochenkirstaetter --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name ghmain "https://nuget.pkg.github.com/mscraftsman/index.json"

    - name: Push to GitHub Package Registry (GPR)
      run: dotnet nuget push output/Mscc.GenerativeAI.*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source "ghmain"

  build_and_push_dependents:
    name: Build and Push Dependent Packages to GPR
    needs: build_and_push_main
    strategy:
      matrix:
        os: [ubuntu-latest]
        dotnet-version: ['9.x']
    runs-on: ${{ matrix.os }}

    steps:
    - name: Wait for GPR package propagation
      run: sleep 300
    
    - name: Check-out latest sources 
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        source-url: https://nuget.pkg.github.com/mscraftsman/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Setup access to GitHub Package Registry (GPR)
      run: dotnet nuget add source --username jochenkirstaetter --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/mscraftsman/index.json"

    - name: Set NuGet source
      run: mv ./nuget.github ./nuget.config

    - name: Restore Dependencies
      run: dotnet restore ./GenerativeAI.sln

    - name: Build
      run: dotnet build ./GenerativeAI.sln -c Release --no-restore

    - name: Pack for ASP.NET Core
      run: dotnet pack -c Release ./src/Mscc.GenerativeAI.Web/Mscc.GenerativeAI.Web.csproj -o output/ --no-build

    - name: Pack for .NET using Google Cloud Client Library
      run: dotnet pack -c Release ./src/Mscc.GenerativeAI.Google/Mscc.GenerativeAI.Google.csproj -o output/ --no-build

    - name: Pack for Microsoft.Extension.AI and Microsoft Semantic Kernel
      run: dotnet pack -c Release ./src/Mscc.GenerativeAI.Microsoft/Mscc.GenerativeAI.Microsoft.csproj -o output/ --no-build

    - name: Push to GitHub Package Registry (GPR)
      run: |
        dotnet nuget push output/Mscc.GenerativeAI.Web.*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
        dotnet nuget push output/Mscc.GenerativeAI.Google.*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
        dotnet nuget push output/Mscc.GenerativeAI.Microsoft.*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"